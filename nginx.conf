events {
    worker_connections 1024;
}

# Stream block to handle MQTT over TCP
stream {
    upstream mqtt_upstream {
        server mosquitto:1883;  # MQTT broker service name and port for TCP
    }

    server {
        listen 1883;  # The port on the EC2 instance where MQTT over TCP will be accessible

        proxy_pass mqtt_upstream;
        proxy_connect_timeout 1s;
        proxy_timeout 3s;
    }
}

http {
    server {
        listen 80;
        server_name 192.168.6.47;  # Replace with your actual domain or hostname

        # React Frontend
        location / {
            proxy_pass http://front-end;  # Frontend served by Nginx in the `front-end` service
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Node.js Backend
        location /api/ {
            proxy_pass http://back-end:3000;  # Backend service
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # MQTT Broker (WebSocket)
        location /mqtt/ {
            proxy_pass http://mosquitto:9001;  # WebSocket for MQTT
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
        }
    }
}
